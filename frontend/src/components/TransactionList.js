// TransactionList.js
import React, { useEffect, useState } from 'react';
import axios from 'axios';

const TransactionList = ({ setEditTransaction, fetchTransactionsTrigger, onEditTransaction }) => {
  const [transactions, setTransactions] = useState([]);
  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω—É–∂–Ω—ã –∑–¥–µ—Å—å, –µ—Å–ª–∏ –º—ã –∏—Ö –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ —ç—Ç–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
  // –ò–º—è –∏ –∏–∫–æ–Ω–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å –±—ç–∫–µ–Ω–¥–∞ –≤–º–µ—Å—Ç–µ —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π (—á–µ—Ä–µ–∑ JOIN)

  const fetchTransactions = async () => {
    try {
      const token = localStorage.getItem('token');
      const response = await axios.get('http://localhost:5000/api/transactions', { // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å category_name –∏ category_icon
        headers: {
          Authorization: `Bearer ${token}`
        }
      });
      console.log('Transactions fetched for list:', response.data); // –ü—Ä–æ–≤–µ—Ä—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É response.data
      // –ê–¥–∞–ø—Ç–∏—Ä—É–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –≥–¥–µ –ª–µ–∂–∏—Ç –º–∞—Å—Å–∏–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –æ—Ç–≤–µ—Ç–µ:
      // response.data.data, response.data.transactions, –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ response.data
      setTransactions(response.data.data || response.data.transactions || response.data || []);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —Å–ø–∏—Å–∫–∞:', error);
    }
  };

  useEffect(() => {
    fetchTransactions();
  }, [fetchTransactionsTrigger]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Ç—Ä–∏–≥–≥–µ—Ä–∞

  const handleDelete = async (id) => {
    if (!window.confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é?')) return;
    try {
      await axios.delete(`http://localhost:5000/api/transactions/${id}`, {
        headers: {
          Authorization: `Bearer ${localStorage.getItem('token')}`
        }
      });
      fetchTransactions(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
      // toast.success('Transaction deleted successfully'); // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', err);
      // toast.error('Failed to delete transaction'); // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    }
  };

  const handleEdit = (txn) => {
    if (onEditTransaction) {
      onEditTransaction(txn);
    } else if (setEditTransaction) { // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ setEditTransaction
      setEditTransaction(txn);
    }
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Ñ–æ—Ä–º–µ
    const formElement = document.getElementById('transaction-form'); // –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É —Ñ–æ—Ä–º—ã –µ—Å—Ç—å —ç—Ç–æ—Ç ID
    if (formElement) {
      formElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
  };
  
  return (
    <div className="transaction-list-container"> {/* –û–±—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
      <h3>–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h3> {/* –ò–∑–º–µ–Ω–∏–ª–∏ h2 –Ω–∞ h3 –¥–ª—è –ª—É—á—à–µ–π –∏–µ—Ä–∞—Ä—Ö–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å h2 –≤—ã—à–µ */}
      {transactions.length === 0 ? (
        <p>–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.</p>
      ) : (
        <ul className="transactions-ul"> {/* –î–æ–±–∞–≤–∏–ª–∏ –∫–ª–∞—Å—Å –¥–ª—è ul */}
          {transactions.map((txn) => (
            <li key={txn.id} className={`transaction-item ${txn.type}`}> {/* –ö–ª–∞—Å—Å—ã –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ */}
              <div className="transaction-icon-category">
                {txn.category_icon && <span className="category-icon" dangerouslySetInnerHTML={{ __html: txn.category_icon }}></span>}
                <span className="transaction-category-name">{txn.category_name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}</span>
              </div>
              <div className="transaction-details">
                <span className="transaction-description">
                  {txn.description || <span style={{ fontStyle: 'italic', color: '#888' }}>- –Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è -</span>}
                </span>
                <span className="transaction-date">
                  {new Date(txn.date).toLocaleDateString()} {/* –£–±–µ–¥–∏—Å—å, —á—Ç–æ txn.date - —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ YYYY-MM-DD –∏–ª–∏ –æ–±—ä–µ–∫—Ç Date */}
                </span>
              </div>
              <div className={`transaction-amount ${txn.type === 'income' ? 'amount-income' : 'amount-expense'}`}>
                {txn.type === 'income' ? '+' : '-'}{Math.abs(txn.amount).toFixed(2)} ‚ÇΩ
              </div>
              <div className="transaction-actions">
                <button className="btn-edit" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" onClick={() => handleEdit(txn)}>‚úèÔ∏è</button>
                <button className="btn-delete" title="–£–¥–∞–ª–∏—Ç—å" onClick={() => handleDelete(txn.id)}>üóëÔ∏è</button>
              </div>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
};

export default TransactionList;